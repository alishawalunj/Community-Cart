type Product{
    productId: ID!
    communityId: ID!
    userId: ID!
    name: String!
    description: String!
    type: String!
    tag: String!
    category: String!
    color: String!
    size: String!
    price: Float!
}

input ProductInput{
    communityId: ID!
    userId: ID!
    name: String!
    description: String!
    type: String!
    tag: String!
    category: String!
    color: String!
    size: String!
    price: Float!
}

type ProductResponseDTO {
    productId: ID!
    communityId: ID!
    userId: ID!
    name: String!
    description: String!
    type: String!
    tag: String!
    category: String!
    color: String!
    size: String!
    price: Float!
}

type Query{
    getAllProducts: [ProductResponseDTO!]!
    getProductById(productId: ID!): ProductResponseDTO!
    getProductsByCommunityId(communityId: ID!): [ProductResponseDTO!]!
    getProductsByUserId(userId: ID!): [ProductResponseDTO!]!
}

type Mutation{
    createProduct(input: ProductInput): String!
    updateProduct(input: ProductInput): ProductResponseDTO!
    deleteProduct(productId: ID!): String!
}