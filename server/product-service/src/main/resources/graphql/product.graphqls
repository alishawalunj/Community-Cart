type Product{
    productId: ID!
    userId: ID!
    communityId: ID!
    name: String!
    description: String!
    productType: String!
    tag: String!
    category: String!
    color: String!
    size: String!
    price: Float!
    count: Float!
}

input ProductInput{
    userId: ID!
    communityId: ID!
    name: String!
    description: String!
    productType: String!
    tag: String!
    category: String!
    color: String!
    size: String!
    price: Float!
    count: Float!
}

input UpdateProductInput{
    productId: ID!
    userId: ID!
    communityId: ID!
    name: String!
    description: String!
    productType: String!
    tag: String!
    category: String!
    color: String!
    size: String!
    price: Float!
    count: Float!
}

type Query {
    getAllProducts: [Product]
    getProductById(productId: ID!): Product
    getProductsByCommunityId(communityId: ID!): [Product]
    getProductsByUserId(userId: ID!): [Product]
}

type Mutation{
    createProduct(product: ProductInput!): String
    updateProduct(product: UpdateProductInput!): Product
    deleteProduct(productId: ID!): String!
}