type User {
    userId: ID!
    firstName: String!
    lastName: String!
    emailId: String!
    password: String!
    communities:[Community]
}

input UserInput {
    firstName: String!
    lastName: String!
    emailId: String!
    password: String!
}

extend type Query {
    getAllUsers: [User]
    getUserById(userId: ID!): User
    getUserByEmailId(emailId: String!): User
    getUserCommunities(userId: ID!): [Community]
}

extend type Mutation {
    createUser(user: UserInput!): User
    updateUser(user: UserInput!): User
    deleteUser(userId: ID!): String
    joinCommunity(userId: ID!, communityId: ID!): Boolean
    leaveCommunity(userId: ID!, communityId: ID!): Boolean
}
